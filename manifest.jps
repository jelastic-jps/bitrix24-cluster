type: install
name: Bitrix

logo: /images/bitrix24.png

description: Bitrix24 Cluster is a collaboration software with a complete toolset for management, collaboration, and communication. It is a unified online workspace to run your businesses. The current package offers automatic clusterization of the Bitrix24 solution ensuring high availability, auto-scalability, and high performance.

baseUrl: https://raw.githubusercontent.com/jelastic-jps/bitrix24-cluster/main/

onBeforeInit: scripts/beforeinit.js?_r=${fn.random}
onBeforeInstall: scripts/beforeinstall.js?_r=${fn.random} 

mixins:
  - configs/vers.yaml

globals:
  DB_USER: bitrix
  DB_PASS: ${fn.password(8)}

settings:
  fields:
    - caption: Install LiteSpeed High-Performance Web Server
      type: checkbox
      name: ls-addon
      value: true
      disabled: false
      tooltip: "If this option is disabled, the cluster will be installed using NGINX load balancer and application servers"
    - type: displayfield
      hideLabel: true
      hidden: true
      name: warningField
      value: 2
      markup:

engine: php7.4
nodes: definedInOnBeforeInstall
    
skipNodeEmails: true
  
onInstall:
  - storageMount: NFS4
  - deployArchive
  - configureApp
  - createDb
  - restartNodes [cp]
  - installPushServer
  
actions:
  deployArchive:
    cmd [${nodes.cp.master.id}]: |-
      WEBROOT="/var/www/webroot/ROOT/"
      cd $WEBROOT && rm -rf $WEBROOT/*
      #curl -fsSL "https://download.jelastic.com/public.php?service=files&t=b419e0e04f498fabab3bda5fff66f870&download" -o $WEBROOT/bitrix.zip
      curl -fsSL "https://www.bitrixsoft.com/download/portal/${globals.version_bitrix24}_encode.zip" -o $WEBROOT/bitrix.zip
      unzip -o $WEBROOT/bitrix.zip
      mkdir $WEBROOT/bitrix/php_interface/
      
  configureApp:
    - if ("${nodes.cp.master.nodeType}" == "apache"):
        cmd [cp]: |-
          ETC="/etc/"
          sed -i "s|;extension=gd.so|extension=gd.so|g" $ETC/php.ini
          sed -i "s|; zend_extension=/usr/lib64/php/modules/opcache.so| zend_extension=/usr/lib64/php/modules/opcache.so|g" $ETC/php.ini
          sed -i "s|;date.timezone =.*|date.timezone = Europe/London|g" $ETC/php.ini
          #sed -i "s|;opcache.revalidate_freq=.*|opcache.revalidate_freq==0|g" /usr/local/lsws/lsphp/etc/php.d/10-opcache.ini
          sed -i "s|;max_input_vars =.*|max_input_vars = 10000|g" $ETC/php.ini
        user: root
    - else:
        cmd [cp]: |-
          ETC="/usr/local/lsws/lsphp/etc/"
          sed -i "s|;extension=gd.so|extension=gd.so|g" $ETC/php.d/20-gd.ini
          sed -i "s|;date.timezone =.*|date.timezone = Europe/London|g" $ETC/php.ini
          sed -i "s|;max_input_vars =.*|max_input_vars = 10000|g" $ETC/php.ini
          #path=$(find /usr/local/lsws/ -name memcached.so)
          
          
          #opcache.revalidate_freq=0
          
          #DB innodb_strict_mode = 0
          #sed -i "s|.*extension=.*|extension=$path|g" $ETC/php.d/50-memcached.ini
          sed -i "s|.*zend_extension=opcache.so|zend_extension=opcache.so|g" $ETC/php.d/10-opcache.ini
          sed -i "s|;opcache.revalidate_freq=.*|opcache.revalidate_freq==0|g" $ETC/php.d/10-opcache.ini
          
    - cmd [${nodes.cp.master.id}]: |-
        WEBROOT="/var/www/webroot/ROOT/"
        curl -fsSL "${baseUrl}/scripts/dbconn.php" -o $WEBROOT/bitrix/php_interface/dbconn.php
        sed -i "s|DB_USER|\${globals.DB_USER}|g" $WEBROOT/bitrix/php_interface/dbconn.php
        sed -i "s|DB_PASS|\${globals.DB_PASS}|g" $WEBROOT/bitrix/php_interface/dbconn.php
        sed -i "s|intIP|\${nodes.cache[0].intIP}|g" $WEBROOT/bitrix/php_interface/dbconn.php
        curl -fsSL "${baseUrl}/scripts/.settings.php" -o $WEBROOT/bitrix/.settings.php     
        sed -i "s|DB_USER|\${globals.DB_USER}|g" $WEBROOT/bitrix/.settings.php
        sed -i "s|DB_PASS|\${globals.DB_PASS}|g" $WEBROOT/bitrix/.settings.php
        
        
        [[ $USER -eq "nginx" ]] && ETC="/etc/" || {
          ETC="/usr/local/lsws/lsphp/etc/"
          PHP_D="${ETC}/php.d/"
          sed -i "s|;opcache.revalidate_freq=.*|opcache.revalidate_freq=0|g" $PHP_D/10-opcache.ini
          sed -i "s|;extension=gd.so|extension=gd.so|g" $PHP_D/20-gd.ini
          sed -i "s|;date.timezone =.*|date.timezone = Europe/London|g" $ETC/php.ini
        }
      
  createDb:
    - cmd[${nodes.sqldb.master.id}]:
        mysql -u${globals.DB_USER} -p${globals.DB_PASS} -h DB -e "CREATE DATABASE IF NOT EXISTS sitemanager;"
    - cmd[sqldb]: sed -i "s|\[mysqld\]|\[mysqld\]\nsql_mode = ''|g" /etc/my.cnf
      user: root
    - restartNodes[sqldb]
    
  setupSynchronization:
    install:
    - jps: https://raw.githubusercontent.com/jelastic-jps/file-sync/master/manifest.jps?_r=${fn.random}
      nodeGroup: cp
      skipEmail: true
      settings:
        optional: one_env
        delay: 5

  storageMount:
    - log: Mount Storage
    - api:
      - method: jelastic.environment.file.AddMountPointByGroup
        params:
          nodeGroup: cp
          sourceNodeId: ${nodes.storage.master.id}
          sourcePath: /data
          path: /var/www/webroot/ROOT
          sourceAddressType: NODE_GROUP
          protocol: ${this}
    - cmd[${nodes.bl[1].id}] : jem service stop
    
  installPushServer:
    - cmd[cp2]: curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash
    - cmd[cp2]: |-
        wget https://repos.1c-bitrix.ru/vm/push-server-0.2.2.tgz
        source /var/www/webroot/.nvm/nvm.sh
        nvm install 14.3.0
    - cmd[cp2]: |-
        mv /var/www/webroot/push-server-0.2.2.tgz /opt/
        chown -R jelastic:root /opt/
      user: root
    - cmd[cp2]: cd /opt/ && source /var/www/webroot/.nvm/nvm.sh && npm install --production ./push-server-0.2.2.tgz
    - cmd[cp2]: |-
        ln -sf /opt/node_modules/push-server/etc/push-server /etc/push-server
        cd /opt/node_modules/push-server
        cp etc/init.d/push-server-multi /usr/local/bin/push-server-multi
        cp etc/sysconfig/push-server-multi  /etc/sysconfig/push-server-multi
        cp etc/push-server/push-server.service  /etc/systemd/system/
        ln -sf /opt/node_modules/push-server /opt/push-server
        chmod 766 /var/log/
        chown jelastic:apache /etc/push-server/push-server-*
        echo 'd /tmp/push-server 0770 jelastic apache -' > /etc/tmpfiles.d/push-server.conf
        systemd-tmpfiles --remove --create
        mkdir /var/log/push-server
        mkdir -p /var/log/push-server
        chown jelastic:apache /var/log/push-server
        sed -i 's|User=.*|User=jelastic|g' /etc/systemd/system/push-server.service
        sed -i 's|Group=.*|Group=apache|g' /etc/systemd/system/push-server.service
        sed -i 's|ExecStart=.*|ExecStart=/usr/local/bin/push-server-multi systemd_start|g' /etc/systemd/system/push-server.service
        sed -i 's|ExecStop=.*|ExecStop=/usr/local/bin/push-server-multi stop|g' /etc/systemd/system/push-server.service
        sed -i 's|User=.*|User=jelastic|g' /etc/push-server/push-server.service
        sed -i 's|Group=.*|Group=apache|g' /etc/push-server/push-server.service
        sed -i 's|ExecStart=.*|ExecStart=/usr/local/bin/push-server-multi systemd_start|g' /etc/push-server/push-server.service
        sed -i 's|ExecStop=.*|ExecStop=/usr/local/bin/push-server-multi stop|g' /etc/push-server/push-server.service
        
      user: root
    - cmd[cp2]: |-
        sed -i 's|USER=.*|USER=jelastic|g' /etc/sysconfig/push-server-multi
        echo "GROUP=jelastic" >> /etc/sysconfig/push-server-multi
        echo "SECURITY_KEY=\"SECURITYKEY\"" >> /etc/sysconfig/push-server-multi
        echo "RUN_DIR=/tmp/push-server" >> /etc/sysconfig/push-server-multi
        /usr/local/bin/push-server-multi configs pub
        /usr/local/bin/push-server-multi configs sub
        chown jelastic:apache /opt/node_modules/push-server/logs /tmp/push-server -RH
        systemctl daemon-reload
        sed -i "s|node \$opt server.js|/var/www/webroot/.nvm/versions/node/v14.3.0/bin/node \$opt /opt/push-server/server.js|g" /usr/local/bin/push-server-multi
        systemctl --now enable push-server
        rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022
        wget https://repo.bitrix.info/yum/bitrix-env.sh && chmod +x bitrix-env.sh && ./bitrix-env.sh
      user: root
